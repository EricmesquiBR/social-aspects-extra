887291,Google-exoplayer,LinearSVMModel,implementation,['C: 3.3489120909219996'; 'kernel: linear'; 'shrinking: false']
887291,Google-exoplayer,RandomForestModel,implementation,['bootstrap: false'; 'criterion: gini'; 'max_depth: 6'; 'max_features: sqrt'; 'min_samples_split: 10'; 'n_estimators: 50']
887291,Google-exoplayer,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 2'; 'splitter: best']
887291,Google-exoplayer,LogisticRegressionModel,implementation,['C: 21.42807953272164'; 'max_iter: 50']
887291,Google-exoplayer,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
887291,Google-exoplayer,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 50']
887291,Google-exoplayer,LinearSVMModel,implementation,['C: 1.3531302262676834'; 'kernel: linear'; 'shrinking: false']
887291,Google-exoplayer,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 24'; 'max_features: sqrt'; 'min_samples_split: 4'; 'n_estimators: 10']
887291,Google-exoplayer,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 2'; 'splitter: best']
887291,Google-exoplayer,LogisticRegressionModel,implementation,['C: 42.90507502873899'; 'max_iter: 50']
887291,Google-exoplayer,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
887291,Google-exoplayer,GradientBoostingRegressorModel,implementation,['max_depth: 24'; 'min_samples_split: 3'; 'n_estimators: 200']
887291,Google-gson,LinearSVMModel,implementation,['C: 0.1188529107485061'; 'kernel: linear'; 'shrinking: false']
887291,Google-gson,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 6'; 'max_features: sqrt'; 'min_samples_split: 2'; 'n_estimators: 50']
887291,Google-gson,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 24'; 'max_features: null'; 'min_samples_split: 3'; 'splitter: random']
887291,Google-gson,LogisticRegressionModel,implementation,['C: 82.20330743157362'; 'max_iter: 50']
887291,Google-gson,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
887291,Google-gson,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 2'; 'n_estimators: 50']
887291,Google-gson,LinearSVMModel,implementation,['C: 4.922034743329588'; 'kernel: linear'; 'shrinking: false']
887291,Google-gson,RandomForestModel,implementation,['bootstrap: false'; 'criterion: entropy'; 'max_depth: 6'; 'max_features: sqrt'; 'min_samples_split: 2'; 'n_estimators: 10']
887291,Google-gson,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 10'; 'splitter: best']
887291,Google-gson,LogisticRegressionModel,implementation,['C: 83.73762929293612'; 'max_iter: 50']
887291,Google-gson,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-06']
887291,Google-gson,GradientBoostingRegressorModel,implementation,['max_depth: 24'; 'min_samples_split: 5'; 'n_estimators: 50']
887291,Google-guava,LinearSVMModel,implementation,['C: 3.8738663675415133'; 'kernel: linear'; 'shrinking: false']
887291,Google-guava,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 12'; 'max_features: null'; 'min_samples_split: 2'; 'n_estimators: 10']
887291,Google-guava,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 12'; 'max_features: null'; 'min_samples_split: 5'; 'splitter: best']
887291,Google-guava,LogisticRegressionModel,implementation,['C: 22.393154719082695'; 'max_iter: 50']
887291,Google-guava,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
887291,Google-guava,GradientBoostingRegressorModel,implementation,['max_depth: 12'; 'min_samples_split: 4'; 'n_estimators: 50']
887291,Google-guava,LinearSVMModel,implementation,['C: 8.743424330020572'; 'kernel: linear'; 'shrinking: false']
887291,Google-guava,RandomForestModel,implementation,['bootstrap: false'; 'criterion: entropy'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 2'; 'n_estimators: 150']
887291,Google-guava,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 2'; 'splitter: random']
887291,Google-guava,LogisticRegressionModel,implementation,['C: 20.007675721679686'; 'max_iter: 50']
887291,Google-guava,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
887291,Google-guava,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 100']
887291,Spring-boot,LinearSVMModel,implementation,['C: 0.9671634282415384'; 'kernel: linear'; 'shrinking: false']
887291,Spring-boot,RandomForestModel,implementation,['bootstrap: false'; 'criterion: entropy'; 'max_depth: 12'; 'max_features: null'; 'min_samples_split: 10'; 'n_estimators: 10']
887291,Spring-boot,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 5'; 'splitter: best']
887291,Spring-boot,LogisticRegressionModel,implementation,['C: 98.69384620280431'; 'max_iter: 50']
887291,Spring-boot,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-09']
887291,Spring-boot,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 10']
887291,Spring-boot,LinearSVMModel,implementation,['C: 2.6455463796124685'; 'kernel: linear'; 'shrinking: false']
887291,Spring-boot,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 10'; 'n_estimators: 150']
887291,Spring-boot,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 11'; 'splitter: random']
887291,Spring-boot,LogisticRegressionModel,implementation,['C: 69.22955610543849'; 'max_iter: 50']
887291,Spring-boot,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-06']
887291,Spring-boot,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 3'; 'n_estimators: 100']
887291,Spring-security,LinearSVMModel,implementation,['C: 0.3103862542308472'; 'kernel: linear'; 'shrinking: false']
887291,Spring-security,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 2'; 'n_estimators: 100']
887291,Spring-security,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 5'; 'splitter: best']
887291,Spring-security,LogisticRegressionModel,implementation,['C: 94.95791588061643'; 'max_iter: 50']
887291,Spring-security,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
887291,Spring-security,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 10'; 'n_estimators: 200']
887291,Spring-security,LinearSVMModel,implementation,['C: 9.299601716481408'; 'kernel: linear'; 'shrinking: false']
887291,Spring-security,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 10'; 'n_estimators: 50']
887291,Spring-security,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 24'; 'max_features: sqrt'; 'min_samples_split: 10'; 'splitter: random']
887291,Spring-security,LogisticRegressionModel,implementation,['C: 57.51916305575115'; 'max_iter: 50']
887291,Spring-security,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
887291,Spring-security,GradientBoostingRegressorModel,implementation,['max_depth: 12'; 'min_samples_split: 5'; 'n_estimators: 100']
887291,Netflix-zuul,LinearSVMModel,implementation,['C: 6.041908923038711'; 'kernel: linear'; 'shrinking: false']
887291,Netflix-zuul,RandomForestModel,implementation,['bootstrap: false'; 'criterion: entropy'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 2'; 'n_estimators: 10']
887291,Netflix-zuul,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 5'; 'splitter: best']
887291,Netflix-zuul,LogisticRegressionModel,implementation,['C: 89.82233056535487'; 'max_iter: 50']
887291,Netflix-zuul,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
887291,Netflix-zuul,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 3'; 'n_estimators: 10']
887291,Netflix-zuul,LinearSVMModel,implementation,['C: 4.407580900444634'; 'kernel: linear'; 'shrinking: false']
887291,Netflix-zuul,RandomForestModel,implementation,['bootstrap: false'; 'criterion: gini'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 3'; 'n_estimators: 50']
887291,Netflix-zuul,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 2'; 'splitter: random']
887291,Netflix-zuul,LogisticRegressionModel,implementation,['C: 5.877795125128698'; 'max_iter: 50']
887291,Netflix-zuul,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
887291,Netflix-zuul,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 5'; 'n_estimators: 150']
887291,Netflix-Hystrix,LinearSVMModel,implementation,['C: 7.996316263095464'; 'kernel: linear'; 'shrinking: false']
887291,Netflix-Hystrix,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 12'; 'max_features: null'; 'min_samples_split: 10'; 'n_estimators: 100']
887291,Netflix-Hystrix,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 2'; 'splitter: random']
887291,Netflix-Hystrix,LogisticRegressionModel,implementation,['C: 5.327206996208669'; 'max_iter: 50']
887291,Netflix-Hystrix,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
887291,Netflix-Hystrix,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 4'; 'n_estimators: 50']
887291,Netflix-Hystrix,LinearSVMModel,implementation,['C: 7.233410637049171'; 'kernel: linear'; 'shrinking: false']
887291,Netflix-Hystrix,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 3'; 'n_estimators: 50']
887291,Netflix-Hystrix,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 10'; 'splitter: random']
887291,Netflix-Hystrix,LogisticRegressionModel,implementation,['C: 89.724961183818'; 'max_iter: 50']
887291,Netflix-Hystrix,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
887291,Netflix-Hystrix,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 50']
887291,Netflix-conductor,LinearSVMModel,implementation,['C: 9.332517606741538'; 'kernel: linear'; 'shrinking: false']
887291,Netflix-conductor,RandomForestModel,implementation,['bootstrap: false'; 'criterion: entropy'; 'max_depth: null'; 'max_features: sqrt'; 'min_samples_split: 4'; 'n_estimators: 50']
887291,Netflix-conductor,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 24'; 'max_features: null'; 'min_samples_split: 10'; 'splitter: random']
887291,Netflix-conductor,LogisticRegressionModel,implementation,['C: 8.017738072494659'; 'max_iter: 50']
887291,Netflix-conductor,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
887291,Netflix-conductor,GradientBoostingRegressorModel,implementation,['max_depth: 12'; 'min_samples_split: 5'; 'n_estimators: 50']
887291,Netflix-conductor,LinearSVMModel,implementation,['C: 8.235553374540075'; 'kernel: linear'; 'shrinking: false']
887291,Netflix-conductor,RandomForestModel,implementation,['bootstrap: false'; 'criterion: gini'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 2'; 'n_estimators: 10']
887291,Netflix-conductor,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 5'; 'splitter: best']
887291,Netflix-conductor,LogisticRegressionModel,implementation,['C: 63.507433721409484'; 'max_iter: 50']
887291,Netflix-conductor,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
887291,Netflix-conductor,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 50']
887291,Netflix-eureka,LinearSVMModel,implementation,['C: 3.4585247467683855'; 'kernel: linear'; 'shrinking: false']
887291,Netflix-eureka,RandomForestModel,implementation,['bootstrap: false'; 'criterion: gini'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 2'; 'n_estimators: 10']
887291,Netflix-eureka,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 3'; 'splitter: best']
887291,Netflix-eureka,LogisticRegressionModel,implementation,['C: 16.040168511598363'; 'max_iter: 50']
887291,Netflix-eureka,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
887291,Netflix-eureka,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 10']
887291,Netflix-eureka,LinearSVMModel,implementation,['C: 8.652911383654311'; 'kernel: linear'; 'shrinking: false']
887291,Netflix-eureka,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 10'; 'n_estimators: 50']
887291,Netflix-eureka,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 6'; 'max_features: sqrt'; 'min_samples_split: 2'; 'splitter: random']
887291,Netflix-eureka,LogisticRegressionModel,implementation,['C: 71.37926929427861'; 'max_iter: 50']
887291,Netflix-eureka,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
887291,Netflix-eureka,GradientBoostingRegressorModel,implementation,['max_depth: 12'; 'min_samples_split: 10'; 'n_estimators: 150']

