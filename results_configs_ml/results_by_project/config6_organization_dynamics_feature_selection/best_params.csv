289202,Google-exoplayer,LinearSVMModel,implementation,['C: 8.928505527383177'; 'kernel: linear'; 'shrinking: false']
289202,Google-exoplayer,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 2'; 'n_estimators: 10']
289202,Google-exoplayer,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 10'; 'splitter: random']
289202,Google-exoplayer,LogisticRegressionModel,implementation,['C: 66.35287478172562'; 'max_iter: 50']
289202,Google-exoplayer,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
289202,Google-exoplayer,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 50']
289202,Google-exoplayer,LinearSVMModel,implementation,['C: 5.103204408144768'; 'kernel: linear'; 'shrinking: false']
289202,Google-exoplayer,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 2'; 'n_estimators: 50']
289202,Google-exoplayer,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 24'; 'max_features: sqrt'; 'min_samples_split: 3'; 'splitter: random']
289202,Google-exoplayer,LogisticRegressionModel,implementation,['C: 36.199369637370594'; 'max_iter: 50']
289202,Google-exoplayer,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
289202,Google-exoplayer,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 5'; 'n_estimators: 200']
289202,Google-gson,LinearSVMModel,implementation,['C: 2.378507870568472'; 'kernel: linear'; 'shrinking: false']
289202,Google-gson,RandomForestModel,implementation,['bootstrap: false'; 'criterion: gini'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 4'; 'n_estimators: 10']
289202,Google-gson,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 12'; 'max_features: null'; 'min_samples_split: 5'; 'splitter: random']
289202,Google-gson,LogisticRegressionModel,implementation,['C: 83.1115834464802'; 'max_iter: 50']
289202,Google-gson,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
289202,Google-gson,GradientBoostingRegressorModel,implementation,['max_depth: 12'; 'min_samples_split: 10'; 'n_estimators: 150']
289202,Google-gson,LinearSVMModel,implementation,['C: 9.078781865923265'; 'kernel: linear'; 'shrinking: false']
289202,Google-gson,RandomForestModel,implementation,['bootstrap: false'; 'criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 4'; 'n_estimators: 10']
289202,Google-gson,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 11'; 'splitter: random']
289202,Google-gson,LogisticRegressionModel,implementation,['C: 42.72214824844363'; 'max_iter: 50']
289202,Google-gson,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
289202,Google-gson,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 2'; 'n_estimators: 150']
289202,Google-guava,LinearSVMModel,implementation,['C: 9.840912962626087'; 'kernel: linear'; 'shrinking: false']
289202,Google-guava,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 2'; 'n_estimators: 150']
289202,Google-guava,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 2'; 'splitter: random']
289202,Google-guava,LogisticRegressionModel,implementation,['C: 1.7948113027996013'; 'max_iter: 50']
289202,Google-guava,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
289202,Google-guava,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 10']
289202,Google-guava,LinearSVMModel,implementation,['C: 0.3102223448415937'; 'kernel: linear'; 'shrinking: false']
289202,Google-guava,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 10'; 'n_estimators: 100']
289202,Google-guava,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 10'; 'splitter: best']
289202,Google-guava,LogisticRegressionModel,implementation,['C: 76.02642814039314'; 'max_iter: 50']
289202,Google-guava,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
289202,Google-guava,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 10'; 'n_estimators: 200']
289202,Spring-boot,LinearSVMModel,implementation,['C: 0.3428817126150729'; 'kernel: linear'; 'shrinking: false']
289202,Spring-boot,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 10'; 'n_estimators: 200']
289202,Spring-boot,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 12'; 'max_features: null'; 'min_samples_split: 10'; 'splitter: best']
289202,Spring-boot,LogisticRegressionModel,implementation,['C: 25.481563436510353'; 'max_iter: 50']
289202,Spring-boot,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
289202,Spring-boot,GradientBoostingRegressorModel,implementation,['max_depth: 12'; 'min_samples_split: 10'; 'n_estimators: 200']
289202,Spring-boot,LinearSVMModel,implementation,['C: 2.961747931403932'; 'kernel: linear'; 'shrinking: false']
289202,Spring-boot,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 2'; 'n_estimators: 200']
289202,Spring-boot,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 6'; 'max_features: sqrt'; 'min_samples_split: 3'; 'splitter: random']
289202,Spring-boot,LogisticRegressionModel,implementation,['C: 32.647363515917846'; 'max_iter: 50']
289202,Spring-boot,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-05']
289202,Spring-boot,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 5'; 'n_estimators: 200']
289202,Spring-security,LinearSVMModel,implementation,['C: 0.2786674586271203'; 'kernel: linear'; 'shrinking: false']
289202,Spring-security,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 2'; 'n_estimators: 100']
289202,Spring-security,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 10'; 'splitter: best']
289202,Spring-security,LogisticRegressionModel,implementation,['C: 67.19533717855836'; 'max_iter: 50']
289202,Spring-security,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
289202,Spring-security,GradientBoostingRegressorModel,implementation,['max_depth: 12'; 'min_samples_split: 2'; 'n_estimators: 10']
289202,Spring-security,LinearSVMModel,implementation,['C: 4.047727831628589'; 'kernel: linear'; 'shrinking: false']
289202,Spring-security,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 5'; 'n_estimators: 200']
289202,Spring-security,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 24'; 'max_features: sqrt'; 'min_samples_split: 10'; 'splitter: random']
289202,Spring-security,LogisticRegressionModel,implementation,['C: 43.430249914695324'; 'max_iter: 50']
289202,Spring-security,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
289202,Spring-security,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 150']
289202,Netflix-zuul,LinearSVMModel,implementation,['C: 6.776047796645128'; 'kernel: linear'; 'shrinking: false']
289202,Netflix-zuul,RandomForestModel,implementation,['bootstrap: false'; 'criterion: gini'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 10'; 'n_estimators: 10']
289202,Netflix-zuul,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 10'; 'splitter: best']
289202,Netflix-zuul,LogisticRegressionModel,implementation,['C: 84.09545425133591'; 'max_iter: 50']
289202,Netflix-zuul,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
289202,Netflix-zuul,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 5'; 'n_estimators: 10']
289202,Netflix-zuul,LinearSVMModel,implementation,['C: 4.091631242116256'; 'kernel: linear'; 'shrinking: false']
289202,Netflix-zuul,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 2'; 'n_estimators: 10']
289202,Netflix-zuul,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 2'; 'splitter: best']
289202,Netflix-zuul,LogisticRegressionModel,implementation,['C: 10.351378841670243'; 'max_iter: 50']
289202,Netflix-zuul,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
289202,Netflix-zuul,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 10']
289202,Netflix-Hystrix,LinearSVMModel,implementation,['C: 7.8714333965285075'; 'kernel: linear'; 'shrinking: false']
289202,Netflix-Hystrix,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 5'; 'n_estimators: 10']
289202,Netflix-Hystrix,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 12'; 'max_features: null'; 'min_samples_split: 5'; 'splitter: best']
289202,Netflix-Hystrix,LogisticRegressionModel,implementation,['C: 89.41001814356711'; 'max_iter: 50']
289202,Netflix-Hystrix,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
289202,Netflix-Hystrix,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 10']
289202,Netflix-Hystrix,LinearSVMModel,implementation,['C: 8.536580396776108'; 'kernel: linear'; 'shrinking: false']
289202,Netflix-Hystrix,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 2'; 'n_estimators: 50']
289202,Netflix-Hystrix,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 2'; 'splitter: best']
289202,Netflix-Hystrix,LogisticRegressionModel,implementation,['C: 87.71225398376617'; 'max_iter: 50']
289202,Netflix-Hystrix,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
289202,Netflix-Hystrix,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 10']
289202,Netflix-conductor,LinearSVMModel,implementation,['C: 8.101773200776252'; 'kernel: linear'; 'shrinking: false']
289202,Netflix-conductor,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 2'; 'n_estimators: 200']
289202,Netflix-conductor,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 2'; 'splitter: best']
289202,Netflix-conductor,LogisticRegressionModel,implementation,['C: 80.07792794814176'; 'max_iter: 50']
289202,Netflix-conductor,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
289202,Netflix-conductor,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 10']
289202,Netflix-conductor,LinearSVMModel,implementation,['C: 6.494557266597792'; 'kernel: linear'; 'shrinking: false']
289202,Netflix-conductor,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 2'; 'n_estimators: 10']
289202,Netflix-conductor,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 6'; 'max_features: sqrt'; 'min_samples_split: 2'; 'splitter: random']
289202,Netflix-conductor,LogisticRegressionModel,implementation,['C: 79.41695238239491'; 'max_iter: 50']
289202,Netflix-conductor,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
289202,Netflix-conductor,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 10'; 'n_estimators: 10']
289202,Netflix-eureka,LinearSVMModel,implementation,['C: 1.7963592708101923'; 'kernel: linear'; 'shrinking: false']
289202,Netflix-eureka,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 10'; 'n_estimators: 50']
289202,Netflix-eureka,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 2'; 'splitter: random']
289202,Netflix-eureka,LogisticRegressionModel,implementation,['C: 70.02254908354679'; 'max_iter: 50']
289202,Netflix-eureka,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
289202,Netflix-eureka,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 5'; 'n_estimators: 10']
289202,Netflix-eureka,LinearSVMModel,implementation,['C: 3.3001037314260757'; 'kernel: linear'; 'shrinking: false']
289202,Netflix-eureka,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 2'; 'n_estimators: 150']
289202,Netflix-eureka,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 24'; 'max_features: sqrt'; 'min_samples_split: 2'; 'splitter: random']
289202,Netflix-eureka,LogisticRegressionModel,implementation,['C: 5.299310839641547'; 'max_iter: 50']
289202,Netflix-eureka,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
289202,Netflix-eureka,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 4'; 'n_estimators: 50']

