948809,Google-exoplayer,LinearSVMModel,implementation,['C: 1.7194561032452653'; 'kernel: linear'; 'shrinking: false']
948809,Google-exoplayer,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 10'; 'n_estimators: 10']
948809,Google-exoplayer,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 5'; 'splitter: random']
948809,Google-exoplayer,LogisticRegressionModel,implementation,['C: 46.74852444249523'; 'max_iter: 50']
948809,Google-exoplayer,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
948809,Google-exoplayer,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 5'; 'n_estimators: 10']
948809,Google-exoplayer,LinearSVMModel,implementation,['C: 0.4809963070335601'; 'kernel: linear'; 'shrinking: false']
948809,Google-exoplayer,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 2'; 'n_estimators: 10']
948809,Google-exoplayer,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 2'; 'splitter: random']
948809,Google-exoplayer,LogisticRegressionModel,implementation,['C: 41.42448155340245'; 'max_iter: 50']
948809,Google-exoplayer,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
948809,Google-exoplayer,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 4'; 'n_estimators: 100']
948809,Google-gson,LinearSVMModel,implementation,['C: 1.6963801020879175'; 'kernel: linear'; 'shrinking: false']
948809,Google-gson,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 3'; 'n_estimators: 150']
948809,Google-gson,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 3'; 'splitter: best']
948809,Google-gson,LogisticRegressionModel,implementation,['C: 10.89495289284265'; 'max_iter: 50']
948809,Google-gson,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
948809,Google-gson,GradientBoostingRegressorModel,implementation,['max_depth: 12'; 'min_samples_split: 2'; 'n_estimators: 100']
948809,Google-gson,LinearSVMModel,implementation,['C: 2.384505515109536'; 'kernel: linear'; 'shrinking: false']
948809,Google-gson,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 5'; 'n_estimators: 10']
948809,Google-gson,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 2'; 'splitter: random']
948809,Google-gson,LogisticRegressionModel,implementation,['C: 76.59472043610414'; 'max_iter: 50']
948809,Google-gson,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
948809,Google-gson,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 3'; 'n_estimators: 100']
948809,Google-guava,LinearSVMModel,implementation,['C: 6.461670459781279'; 'kernel: linear'; 'shrinking: false']
948809,Google-guava,RandomForestModel,implementation,['bootstrap: false'; 'criterion: gini'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 2'; 'n_estimators: 10']
948809,Google-guava,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 10'; 'splitter: best']
948809,Google-guava,LogisticRegressionModel,implementation,['C: 17.257246350196546'; 'max_iter: 50']
948809,Google-guava,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
948809,Google-guava,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 4'; 'n_estimators: 50']
948809,Google-guava,LinearSVMModel,implementation,['C: 9.880318230280201'; 'kernel: linear'; 'shrinking: false']
948809,Google-guava,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 2'; 'n_estimators: 10']
948809,Google-guava,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 2'; 'splitter: best']
948809,Google-guava,LogisticRegressionModel,implementation,['C: 76.00321968011987'; 'max_iter: 50']
948809,Google-guava,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
948809,Google-guava,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 10']
948809,Spring-boot,LinearSVMModel,implementation,['C: 8.279486898997547'; 'kernel: linear'; 'shrinking: false']
948809,Spring-boot,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 12'; 'max_features: null'; 'min_samples_split: 5'; 'n_estimators: 200']
948809,Spring-boot,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 24'; 'max_features: sqrt'; 'min_samples_split: 2'; 'splitter: random']
948809,Spring-boot,LogisticRegressionModel,implementation,['C: 84.81620041878683'; 'max_iter: 50']
948809,Spring-boot,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-09']
948809,Spring-boot,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 200']
948809,Spring-boot,LinearSVMModel,implementation,['C: 6.5135597607042355'; 'kernel: linear'; 'shrinking: false']
948809,Spring-boot,RandomForestModel,implementation,['bootstrap: false'; 'criterion: entropy'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 2'; 'n_estimators: 10']
948809,Spring-boot,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 12'; 'max_features: null'; 'min_samples_split: 5'; 'splitter: random']
948809,Spring-boot,LogisticRegressionModel,implementation,['C: 85.89529745517872'; 'max_iter: 50']
948809,Spring-boot,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
948809,Spring-boot,GradientBoostingRegressorModel,implementation,['max_depth: 12'; 'min_samples_split: 10'; 'n_estimators: 10']
948809,Spring-security,LinearSVMModel,implementation,['C: 8.377594104210102'; 'kernel: linear'; 'shrinking: false']
948809,Spring-security,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 24'; 'max_features: sqrt'; 'min_samples_split: 10'; 'n_estimators: 100']
948809,Spring-security,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 12'; 'max_features: null'; 'min_samples_split: 3'; 'splitter: random']
948809,Spring-security,LogisticRegressionModel,implementation,['C: 83.29958771227598'; 'max_iter: 50']
948809,Spring-security,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
948809,Spring-security,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 4'; 'n_estimators: 50']
948809,Spring-security,LinearSVMModel,implementation,['C: 8.244484301596632'; 'kernel: linear'; 'shrinking: false']
948809,Spring-security,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 12'; 'max_features: null'; 'min_samples_split: 3'; 'n_estimators: 200']
948809,Spring-security,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 6'; 'max_features: sqrt'; 'min_samples_split: 2'; 'splitter: best']
948809,Spring-security,LogisticRegressionModel,implementation,['C: 55.20980708668305'; 'max_iter: 50']
948809,Spring-security,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
948809,Spring-security,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 10'; 'n_estimators: 50']
948809,Netflix-zuul,LinearSVMModel,implementation,['C: 1.8296137392045215'; 'kernel: linear'; 'shrinking: false']
948809,Netflix-zuul,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 10'; 'n_estimators: 150']
948809,Netflix-zuul,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 5'; 'splitter: random']
948809,Netflix-zuul,LogisticRegressionModel,implementation,['C: 4.116277597187312'; 'max_iter: 50']
948809,Netflix-zuul,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
948809,Netflix-zuul,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 3'; 'n_estimators: 50']
948809,Netflix-zuul,LinearSVMModel,implementation,['C: 3.2347553185012936'; 'kernel: linear'; 'shrinking: false']
948809,Netflix-zuul,RandomForestModel,implementation,['bootstrap: false'; 'criterion: gini'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 10'; 'n_estimators: 50']
948809,Netflix-zuul,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 2'; 'splitter: random']
948809,Netflix-zuul,LogisticRegressionModel,implementation,['C: 8.104449425689968'; 'max_iter: 50']
948809,Netflix-zuul,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
948809,Netflix-zuul,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 5'; 'n_estimators: 10']
948809,Netflix-Hystrix,LinearSVMModel,implementation,['C: 8.281804332294062'; 'kernel: linear'; 'shrinking: false']
948809,Netflix-Hystrix,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 6'; 'max_features: sqrt'; 'min_samples_split: 4'; 'n_estimators: 200']
948809,Netflix-Hystrix,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 11'; 'splitter: random']
948809,Netflix-Hystrix,LogisticRegressionModel,implementation,['C: 28.382824750880683'; 'max_iter: 50']
948809,Netflix-Hystrix,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
948809,Netflix-Hystrix,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 5'; 'n_estimators: 100']
948809,Netflix-Hystrix,LinearSVMModel,implementation,['C: 2.2015545619930137'; 'kernel: linear'; 'shrinking: false']
948809,Netflix-Hystrix,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 2'; 'n_estimators: 10']
948809,Netflix-Hystrix,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 11'; 'splitter: best']
948809,Netflix-Hystrix,LogisticRegressionModel,implementation,['C: 54.395810752578925'; 'max_iter: 50']
948809,Netflix-Hystrix,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
948809,Netflix-Hystrix,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 10']
948809,Netflix-conductor,LinearSVMModel,implementation,['C: 9.135056118005114'; 'kernel: linear'; 'shrinking: false']
948809,Netflix-conductor,RandomForestModel,implementation,['bootstrap: false'; 'criterion: gini'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 2'; 'n_estimators: 10']
948809,Netflix-conductor,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 2'; 'splitter: best']
948809,Netflix-conductor,LogisticRegressionModel,implementation,['C: 93.85670809742422'; 'max_iter: 50']
948809,Netflix-conductor,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
948809,Netflix-conductor,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 2'; 'n_estimators: 10']
948809,Netflix-conductor,LinearSVMModel,implementation,['C: 9.49602730619389'; 'kernel: linear'; 'shrinking: false']
948809,Netflix-conductor,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 10'; 'n_estimators: 10']
948809,Netflix-conductor,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 24'; 'max_features: sqrt'; 'min_samples_split: 10'; 'splitter: random']
948809,Netflix-conductor,LogisticRegressionModel,implementation,['C: 6.742947672681597'; 'max_iter: 50']
948809,Netflix-conductor,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
948809,Netflix-conductor,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 4'; 'n_estimators: 150']
948809,Netflix-eureka,LinearSVMModel,implementation,['C: 6.402800930137693'; 'kernel: linear'; 'shrinking: false']
948809,Netflix-eureka,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 10'; 'n_estimators: 100']
948809,Netflix-eureka,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 6'; 'max_features: sqrt'; 'min_samples_split: 10'; 'splitter: random']
948809,Netflix-eureka,LogisticRegressionModel,implementation,['C: 53.735178886602384'; 'max_iter: 50']
948809,Netflix-eureka,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
948809,Netflix-eureka,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 2'; 'n_estimators: 100']
948809,Netflix-eureka,LinearSVMModel,implementation,['C: 3.564351013746957'; 'kernel: linear'; 'shrinking: false']
948809,Netflix-eureka,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 5'; 'n_estimators: 10']
948809,Netflix-eureka,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 2'; 'splitter: best']
948809,Netflix-eureka,LogisticRegressionModel,implementation,['C: 15.476015285773391'; 'max_iter: 50']
948809,Netflix-eureka,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-07']
948809,Netflix-eureka,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 2'; 'n_estimators: 200']

