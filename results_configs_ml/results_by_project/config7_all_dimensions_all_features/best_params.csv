59960,Google-exoplayer,LinearSVMModel,implementation,['C: 3.2510400441421106'; 'kernel: linear'; 'shrinking: false']
59960,Google-exoplayer,RandomForestModel,implementation,['bootstrap: false'; 'criterion: gini'; 'max_depth: 6'; 'max_features: sqrt'; 'min_samples_split: 10'; 'n_estimators: 10']
59960,Google-exoplayer,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 12'; 'max_features: null'; 'min_samples_split: 11'; 'splitter: random']
59960,Google-exoplayer,LogisticRegressionModel,implementation,['C: 43.883364257269385'; 'max_iter: 50']
59960,Google-exoplayer,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-05']
59960,Google-exoplayer,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 5'; 'n_estimators: 150']
59960,Google-exoplayer,LinearSVMModel,implementation,['C: 9.000312562026995'; 'kernel: linear'; 'shrinking: false']
59960,Google-exoplayer,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 4'; 'n_estimators: 10']
59960,Google-exoplayer,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 12'; 'max_features: null'; 'min_samples_split: 5'; 'splitter: best']
59960,Google-exoplayer,LogisticRegressionModel,implementation,['C: 8.362017911865875'; 'max_iter: 50']
59960,Google-exoplayer,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
59960,Google-exoplayer,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 10']
59960,Google-gson,LinearSVMModel,implementation,['C: 4.738765487997134'; 'kernel: linear'; 'shrinking: false']
59960,Google-gson,RandomForestModel,implementation,['bootstrap: false'; 'criterion: entropy'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 2'; 'n_estimators: 50']
59960,Google-gson,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 6'; 'max_features: sqrt'; 'min_samples_split: 11'; 'splitter: best']
59960,Google-gson,LogisticRegressionModel,implementation,['C: 87.95906242355044'; 'max_iter: 50']
59960,Google-gson,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
59960,Google-gson,GradientBoostingRegressorModel,implementation,['max_depth: 12'; 'min_samples_split: 10'; 'n_estimators: 10']
59960,Google-gson,LinearSVMModel,implementation,['C: 2.026120433104373'; 'kernel: linear'; 'shrinking: false']
59960,Google-gson,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 4'; 'n_estimators: 10']
59960,Google-gson,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 2'; 'splitter: best']
59960,Google-gson,LogisticRegressionModel,implementation,['C: 15.652095395919988'; 'max_iter: 50']
59960,Google-gson,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
59960,Google-gson,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 3'; 'n_estimators: 200']
59960,Google-guava,LinearSVMModel,implementation,['C: 8.888783436676162'; 'kernel: linear'; 'shrinking: false']
59960,Google-guava,RandomForestModel,implementation,['bootstrap: false'; 'criterion: entropy'; 'max_depth: 12'; 'max_features: null'; 'min_samples_split: 4'; 'n_estimators: 10']
59960,Google-guava,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 12'; 'max_features: null'; 'min_samples_split: 10'; 'splitter: random']
59960,Google-guava,LogisticRegressionModel,implementation,['C: 57.828408364650755'; 'max_iter: 50']
59960,Google-guava,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-08']
59960,Google-guava,GradientBoostingRegressorModel,implementation,['max_depth: 12'; 'min_samples_split: 2'; 'n_estimators: 10']
59960,Google-guava,LinearSVMModel,implementation,['C: 9.350131324251846'; 'kernel: linear'; 'shrinking: false']
59960,Google-guava,RandomForestModel,implementation,['bootstrap: false'; 'criterion: gini'; 'max_depth: 6'; 'max_features: sqrt'; 'min_samples_split: 2'; 'n_estimators: 50']
59960,Google-guava,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 5'; 'splitter: random']
59960,Google-guava,LogisticRegressionModel,implementation,['C: 0.8771119897221495'; 'max_iter: 50']
59960,Google-guava,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
59960,Google-guava,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 3'; 'n_estimators: 10']
59960,Spring-boot,LinearSVMModel,implementation,['C: 5.36189919689793'; 'kernel: linear'; 'shrinking: false']
59960,Spring-boot,RandomForestModel,implementation,['bootstrap: false'; 'criterion: entropy'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 2'; 'n_estimators: 50']
59960,Spring-boot,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 24'; 'max_features: sqrt'; 'min_samples_split: 5'; 'splitter: random']
59960,Spring-boot,LogisticRegressionModel,implementation,['C: 22.800065273661904'; 'max_iter: 50']
59960,Spring-boot,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-05']
59960,Spring-boot,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 4'; 'n_estimators: 10']
59960,Spring-boot,LinearSVMModel,implementation,['C: 1.3085728084872408'; 'kernel: linear'; 'shrinking: false']
59960,Spring-boot,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 24'; 'max_features: sqrt'; 'min_samples_split: 3'; 'n_estimators: 10']
59960,Spring-boot,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 24'; 'max_features: null'; 'min_samples_split: 2'; 'splitter: random']
59960,Spring-boot,LogisticRegressionModel,implementation,['C: 21.31282948862703'; 'max_iter: 50']
59960,Spring-boot,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
59960,Spring-boot,GradientBoostingRegressorModel,implementation,['max_depth: 12'; 'min_samples_split: 3'; 'n_estimators: 10']
59960,Spring-security,LinearSVMModel,implementation,['C: 1.1038021765073707'; 'kernel: linear'; 'shrinking: false']
59960,Spring-security,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 10'; 'n_estimators: 200']
59960,Spring-security,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 3'; 'splitter: random']
59960,Spring-security,LogisticRegressionModel,implementation,['C: 18.483044786077404'; 'max_iter: 50']
59960,Spring-security,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
59960,Spring-security,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 50']
59960,Spring-security,LinearSVMModel,implementation,['C: 0.6515395042621552'; 'kernel: linear'; 'shrinking: false']
59960,Spring-security,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: null'; 'max_features: sqrt'; 'min_samples_split: 3'; 'n_estimators: 200']
59960,Spring-security,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 11'; 'splitter: best']
59960,Spring-security,LogisticRegressionModel,implementation,['C: 50.19160217097906'; 'max_iter: 50']
59960,Spring-security,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
59960,Spring-security,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 200']
59960,Netflix-zuul,LinearSVMModel,implementation,['C: 0.8235824298454326'; 'kernel: linear'; 'shrinking: false']
59960,Netflix-zuul,RandomForestModel,implementation,['bootstrap: false'; 'criterion: gini'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 2'; 'n_estimators: 10']
59960,Netflix-zuul,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 2'; 'splitter: best']
59960,Netflix-zuul,LogisticRegressionModel,implementation,['C: 3.129334662446063'; 'max_iter: 50']
59960,Netflix-zuul,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
59960,Netflix-zuul,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 10']
59960,Netflix-zuul,LinearSVMModel,implementation,['C: 3.060043801113728'; 'kernel: linear'; 'shrinking: false']
59960,Netflix-zuul,RandomForestModel,implementation,['bootstrap: false'; 'criterion: entropy'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 3'; 'n_estimators: 10']
59960,Netflix-zuul,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 10'; 'splitter: best']
59960,Netflix-zuul,LogisticRegressionModel,implementation,['C: 24.327768274311897'; 'max_iter: 50']
59960,Netflix-zuul,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-07']
59960,Netflix-zuul,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 10'; 'n_estimators: 10']
59960,Netflix-Hystrix,LinearSVMModel,implementation,['C: 3.9008074607139673'; 'kernel: linear'; 'shrinking: false']
59960,Netflix-Hystrix,RandomForestModel,implementation,['bootstrap: false'; 'criterion: entropy'; 'max_depth: 6'; 'max_features: sqrt'; 'min_samples_split: 3'; 'n_estimators: 100']
59960,Netflix-Hystrix,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 24'; 'max_features: sqrt'; 'min_samples_split: 5'; 'splitter: random']
59960,Netflix-Hystrix,LogisticRegressionModel,implementation,['C: 5.362936876954218'; 'max_iter: 50']
59960,Netflix-Hystrix,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
59960,Netflix-Hystrix,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 5'; 'n_estimators: 150']
59960,Netflix-Hystrix,LinearSVMModel,implementation,['C: 7.559084902795362'; 'kernel: linear'; 'shrinking: false']
59960,Netflix-Hystrix,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 6'; 'max_features: sqrt'; 'min_samples_split: 4'; 'n_estimators: 10']
59960,Netflix-Hystrix,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 10'; 'splitter: best']
59960,Netflix-Hystrix,LogisticRegressionModel,implementation,['C: 9.585302068891469'; 'max_iter: 50']
59960,Netflix-Hystrix,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-05']
59960,Netflix-Hystrix,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 4'; 'n_estimators: 10']
59960,Netflix-conductor,LinearSVMModel,implementation,['C: 0.34396056613847503'; 'kernel: linear'; 'shrinking: false']
59960,Netflix-conductor,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 6'; 'max_features: null'; 'min_samples_split: 2'; 'n_estimators: 50']
59960,Netflix-conductor,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 12'; 'max_features: sqrt'; 'min_samples_split: 10'; 'splitter: random']
59960,Netflix-conductor,LogisticRegressionModel,implementation,['C: 17.354726947678188'; 'max_iter: 50']
59960,Netflix-conductor,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
59960,Netflix-conductor,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 5'; 'n_estimators: 10']
59960,Netflix-conductor,LinearSVMModel,implementation,['C: 2.073602218813983'; 'kernel: linear'; 'shrinking: false']
59960,Netflix-conductor,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 2'; 'n_estimators: 100']
59960,Netflix-conductor,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 10'; 'splitter: random']
59960,Netflix-conductor,LogisticRegressionModel,implementation,['C: 72.05782494314013'; 'max_iter: 50']
59960,Netflix-conductor,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
59960,Netflix-conductor,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 2'; 'n_estimators: 200']
59960,Netflix-eureka,LinearSVMModel,implementation,['C: 5.950160747583595'; 'kernel: linear'; 'shrinking: false']
59960,Netflix-eureka,RandomForestModel,implementation,['bootstrap: true'; 'criterion: gini'; 'max_depth: 3'; 'max_features: sqrt'; 'min_samples_split: 3'; 'n_estimators: 200']
59960,Netflix-eureka,DecisionTreeModel,implementation,['criterion: entropy'; 'max_depth: 3'; 'max_features: null'; 'min_samples_split: 2'; 'splitter: random']
59960,Netflix-eureka,LogisticRegressionModel,implementation,['C: 12.29349577691234'; 'max_iter: 50']
59960,Netflix-eureka,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-10']
59960,Netflix-eureka,GradientBoostingRegressorModel,implementation,['max_depth: 3'; 'min_samples_split: 10'; 'n_estimators: 10']
59960,Netflix-eureka,LinearSVMModel,implementation,['C: 1.805360462523533'; 'kernel: linear'; 'shrinking: false']
59960,Netflix-eureka,RandomForestModel,implementation,['bootstrap: true'; 'criterion: entropy'; 'max_depth: 6'; 'max_features: sqrt'; 'min_samples_split: 4'; 'n_estimators: 100']
59960,Netflix-eureka,DecisionTreeModel,implementation,['criterion: gini'; 'max_depth: 6'; 'max_features: sqrt'; 'min_samples_split: 5'; 'splitter: best']
59960,Netflix-eureka,LogisticRegressionModel,implementation,['C: 47.01042188283615'; 'max_iter: 50']
59960,Netflix-eureka,GaussianNaiveBayesModel,implementation,['var_smoothing: 1e-08']
59960,Netflix-eureka,GradientBoostingRegressorModel,implementation,['max_depth: 6'; 'min_samples_split: 3'; 'n_estimators: 100']

